buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.robolectric:robolectric-gradle-plugin:1.1.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'idea'
apply plugin: 'org.robolectric'

android {
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            // Configure max heap size of the test JVM
            maxHeapSize = '2048m'

            // Configure the test JVM arguments - Does not apply to Java 8
            jvmArgs '-XX:MaxPermSize=512m', '-XX:-UseSplitVerifier'

            // Specify max number of processes (default is 1)
            maxParallelForks = 4

            // Specify max number of test classes to execute in a test process
            // before restarting the process (default is unlimited)
            forkEvery = 150

            // configure whether failing tests should fail the build
            ignoreFailures false

            // use afterTest to listen to the test execution results
            afterTest { descriptor, result ->
                println "Executing test for ${descriptor.name} with result: ${result.resultType}"
            }
        }
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }
    compileSdkVersion 21
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.groceryreminder"
        minSdkVersion 16
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.groceryreminder.EspressoTestRunner"
    }
    signingConfigs {
        release {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('release.properties').newDataInputStream())
            storeFile file(properties.getProperty('store.file'))
            storePassword properties.getProperty("store.password")
            keyAlias properties.getProperty("key.alias")
            keyPassword properties.getProperty("key.password")
        }
    }
    buildTypes {
        debug {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            def apiKey = properties.getProperty('places.api.key')
            resValue "string", "google_places_api_key", apiKey
            println("Store File: " + signingConfigs.debug.storeFile)
            println("Store password: " + signingConfigs.debug.storePassword)
            println("Key Alias: " + signingConfigs.debug.keyAlias)
            println("Key Password: " + signingConfigs.debug.keyPassword)
        }
        release {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('release.properties').newDataInputStream())
            def apiKey = properties.getProperty('places.api.key')
            resValue "string", "google_places_api_key", apiKey
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

idea {
    module {
        testOutputDir = file('build/test-classes/debug')
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-annotations:22.2.0'
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:cardview-v7:22.2.0'
    compile 'com.android.support:recyclerview-v7:22.2.0'
    //Remove the next line when this issue is fixed: https://code.google.com/p/android/issues/detail?id=74772
    compile 'org.solovyev.android.views:linear-layout-manager:0.3@aar'
    compile 'com.melnykov:floatingactionbutton:1.1.0'
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    compile 'commons-io:commons-io:1.3.2'
    compile 'com.github.brnunes:swipeablerecyclerview:1.0.1'

    //Dagger
    compile 'com.squareup:javawriter:2.5.0'
    compile ('com.squareup.dagger:dagger:1.2.2') {
        exclude module: 'javawriter'
    }
    compile ('com.squareup.dagger:dagger-compiler:1.2.2') {
        exclude module: 'javawriter'
    }
//    compile 'se.walkercrou:google-places-api-java:2.1.0'

    testCompile 'org.hamcrest:hamcrest-integration:1.3'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile('junit:junit:4.12')
    testCompile 'org.mockito:mockito-core:1.+'
    testCompile('org.robolectric:robolectric:3.0-SNAPSHOT')
    testCompile('org.robolectric:shadows-support-v4:3.0-SNAPSHOT')

    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile ('com.google.dexmaker:dexmaker-mockito:1.2') {
        exclude module: 'hamcrest-core'
        exclude module: 'mockito-core'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.0') {
        exclude group: 'javax.inject'
        exclude module: 'javawriter'
        exclude module: 'hamcrest-core'
    }
    androidTestCompile('com.android.support.test:testing-support-lib:0.1')  {
        exclude module: 'hamcrest-core'
    }
}
